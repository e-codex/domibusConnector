java.keystore.path=file:src/test/resources/keystore/evidenceBuilderStore.jks
java.keystore.password=123456
key.alias=evidenceBuilderKey
key.password=123456

# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.evidences.keystore.path=file:src/test/resources/keys/client.jks
connector.evidences.keystore.password=apache
connector.evidences.key.alias=client
connector.evidences.key.password=apache

# To be able to sign the secure contents of the message, a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.security.keystore.path=file:src/test/resources/keys/client.jks
connector.security.keystore.password=apache
connector.security.key.alias=client
connector.security.key.password=apache

# A keystore with trusted, public certificates the security library checks received ASiC-S containers and "Trust Ok"-Tokens against. 
# If this property is set, signatures with certificates not being listed within the truststore will create an exception at the time of container/token-validation
# Do not set this properties to disable the check against a trusted certificate store.
java.truststore.path=file:src/test/resources/keys/service.jks
java.truststore.password=apache

hash.algorithm=MD5

http.proxy.enabled=${http.proxy.enabled}
http.proxy.host=${http.proxy.host} 
http.proxy.port=${http.proxy.port}
http.proxy.user=
http.proxy.password=

token.issuer.country=AT
token.issuer.service.provider=BRZ

connector.security.toolkit.implementation.class.name=

token.issuer.aes.value=SIGNATURE_BASED
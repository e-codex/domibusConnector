# This property file contains properties which are used by the ECodexConnector framework, though necessary to run the framework inside an application.

# defines the endpoint address of the corresponding gateway webservice.
gateway.endpoint.address=http://localhost:8080/holodeck/services/BackendService/services/
# defines which name and role the connector/gateway coupling represent in the circle of gateways used.
gateway.name=AT
gateway.role=GW

# As every nation has its own backend client, an implementation of the ECodexConnectorNationalBackendClient interface has to be implemented which handles the connection to its own backend.
# Here the full qualified name of the implementation class which implements ECodexConnectorNationalBackendClient must be given.
connector.national.backend.client.implementation.class.name=eu.domibus.national.implementation.example.nbc.ECodexConnectorService

# defines if content mapper module should be used. 
# If there is a certain national format the eCodex message should be transformed to
# this content mapper handles the mapping. The main class ECodexConnectorContentMapperImpl has to be
# extended.
connector.use.content.mapper=true

# If content mapper module is used, an implementation of the ECodexConnectorContentMapper interface has to be implemented with national content.
# Here the full qualified name of the implementation class which implements ECodexConnectorContentMapper must be given.
# If no content mapper is used (connector.use.content.mappe set false), property can be left empty:
# property connector.content.mapper.implementation.class.name=
connector.content.mapper.implementation.class.name=eu.domibus.national.implementation.example.mapping.NationalContentMapper

# defines if security toolkit should be used. 
# If messages should be encrypted with a trustOkToken and be sent in an encrypted container,
# this module has to be activated. 
# As eCodex only accepts encrypted files for transportation it is strictly recommended to set this parameter to "true"
connector.use.security.toolkit=true

# here is the possibility to define a class name which overrides the default behavior of the security toolkit. For example when documents are not
# SIGNATURE_BASED, but AUTHENTICATION_BASED the behavior has to be implemented by every participant country itself. 
# In this example implementation a way to use AUTHENTICATION_BASED signature is shown. If not used then this property needs to be empty.
connector.security.toolkit.implementation.class.name=eu.domibus.national.implementation.example.security.NationalSecurityToolkit

# defines if evidences toolkit should be used.
# In ebMS standard messages should be confirmed or declined by evidences messages sent back to the message sender.
# Those messages contain the state of the message sent and are therefore good to hold reliability.
connector.use.evidences.toolkit=true

# defines how often the gateway and the national backend system should be checked for messages.
# All messages in both directions should be handled entirely before next period starts. So no conflicts are produced.
# Value is in milliseconds. For seconds divide value with 1000. For example 30 000 milliseconds are 30 seconds.
connector.check.messages.period.ms=60000

# defines the timeout for RelayREMMD evidence to be sent back when an outgoing message was sent. 
# After this period, if an outgoing message was sent to the gateway successfully and no RelayREMMD evidence was received, 
# a RelayREMMDRejection will be created for this evidence an sent back to the national system.
# Value is in milliseconds. For seconds divide value with 1000. For hours divide value with 3600000.
connector.evidence.relayremmd.timeout.ms=86400000

connector.evidence.delivery.timeout.ms=86400000

connector.evidence.retrieval.timeout.ms=86400000

# boolean value to turn on/off the check if evidences for outgoing messages have been received yet.
connector.use.evidences.timeout=false

# Following properties define the connection to the database where message states should be logged.
# The dialect and driverClassName values depend on the dbms that is in use. Here some examples:
# Oracle:
# connector.database.dialect=org.hibernate.dialect.Oracle10gDialect
# connector.database.driverClassName=oracle.jdbc.driver.OracleDriver
# MySQL:
# connector.database.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# connector.database.driverClassName=com.mysql.jdbc.Driver
#connector.database.dialect=
#connector.database.driverClassName=
#connector.database.url=
#connector.database.username=
#connector.database.password=

# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.evidences.keystore.path=file:${user.dir}/src/main/resources/keystore/exampleKeyStore.jks
connector.evidences.keystore.password=123456
connector.evidences.key.alias=evidenceBuilderKey
connector.evidences.key.password=123456

# To be able to sign the secure contents of the message, a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.security.keystore.path=file:${user.dir}/src/main/resources/keystore/exampleKeyStore.jks
connector.security.keystore.password=123456
connector.security.key.alias=evidenceBuilderKey
connector.security.key.password=123456

# A keystore with trusted, public certificates the security library checks received ASiC-S containers and "Trust Ok"-Tokens against. 
# If this property is set, signatures with certificates not being listed within the truststore will create an exception at the time of container/token-validation
# Do not set this properties to disable the check against a trusted certificate store.
java.truststore.path=file:${user.dir}/src/main/resources/service.jks
java.truststore.password=123456

# As the security toolkit uses web connections for loading trust stores, proxy settings must be set in case there is one.
http.proxy.enabled=true
http.proxy.host=127.0.0.1
http.proxy.port=8080
http.proxy.user=
http.proxy.password=

# Indicates the algorithm with which the message content hash value should be generated. This hash value is needed by the EvidenceBuilder to generate the first evidence for a message.
hash.algorithm=MD5

# For the security library to build the token it is necessary to provide your ISO country code, who provides the service (the connector and gateway)
# and to tell the lib wether a container should be signed SIGNATURE_BASED (default behaviour) or AUTHENTICATION_BASED. In this case there has to be
# implemented a connector.security.toolkit.implementation.class.name.
token.issuer.country=
token.issuer.service.provider=
token.issuer.aes.value=SIGNATURE_BASED

# For the evidence builder the postal address of the original sender should be set.
postal.address.street=
postal.address.locality=
postal.address.postal.code=
postal.address.country=

c3p0.acquireIncrement=2
c3p0.minPoolSize=3
c3p0.maxPoolSize=5
c3p0.maxIdleTime=120

# new properties for dynamic discovery
connector.use.dynamic.discovery=true
dynamic.discovery.sml.resolver.address=localhost:5353
dynamic.discovery.community=civil-law
dynamic.discovery.environment=test
dynamic.discovery.normalisation.algorithm=MD5



###
###
#Logging configuration
#logging.level=INFO
logging.level.eu.domibus.webadmin=TRACE
#logging.level.org.springframework.security=DEBUG



##JPA CONFIG
spring.jpa.show-sql=true

##server config
#server.contextPath=/domibuswebadmin
server.port=8082

spring.debug=true
debug=true

connector.webadmin.contextPath=/domibuswebadmin

#spring.datasource.type=com.mchange.v2.c3p0.ComboPooledDataSource #creates trouble!
#spring.datasource.url=jdbc:oracle:thin:@sjusee:1521:sjusee
#spring.datasource.username=tbckenddb
#spring.datasource.password=tbckenddb
#spring.datasource.driverClassName=oracle.jdbc.driver.OracleDriver

spring.datasource.url=jdbc:mysql://localhost/domibusconnector
spring.datasource.username=domibusconnector
spring.datasource.password=domibus
spring.datasource.driverClassName=com.mysql.jdbc.Driver

liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
liquibase.drop-first=false
liquibase.enabled=true


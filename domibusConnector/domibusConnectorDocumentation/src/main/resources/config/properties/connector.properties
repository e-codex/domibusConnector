## CONNECTOR PROPERTIES
##
## This file contains the connector configuration properties
## Properties marked with !! must be changed according to your setup/environment!
##



#############################################################################
############################ GATEWAY LINK ###################################
#############################################################################

# defines the endpoint address of the gateway webservice, the gateway name and role.

# The connector is using this webservice address to submit messages to the gateway
gateway.endpoint.address=!!CHANGE ME!! example: http://GW:8080/domibus/services/domibusConnectorSubmissionWebservice

#This is the name and role of your Gateway according to the p-modes used:
gateway.name=!!CHANGEME!!	
gateway.role=!!CHANGEME!!

################################################################################
############################ CONNECTOR-TESTS ###################################
################################################################################

# Service and action entered here according to the p-modes used.
# Enabled and used messages received with that combination will not be sent to the backend of the connector, 
# but will be answered with evidences after processed in the connector.
connector.test.service=
connector.test.action=

##################################################################################
############################ EVIDENCES TOOLKIT ###################################
##################################################################################

# boolean value to turn on/off the check if evidences for outgoing messages have been received yet.
connector.controller.evidence.timeoutActive=false

# All timeout values apply the following rules:
# -- Set to 0, they will be ignored
# -- After a message is rejected, also a positive received evidence afterwards does not change the status.
# -- All values are in milliseconds. For seconds divide value with 1000. For hours divide value with 3600000.

# After this period, if an outgoing message was sent to the gateway successfully and no RelayREMMD evidence was received,
# a RelayREMMDRejection will be created for this evidence an sent back to the national system.
connector.controller.evidence.relayREMMDTimeout=86400000
# After this period, if an outgoing message was sent to the gateway successfully and no Delivery/Non-Delivery evidence was received,
# a Non-Delivery will be created for this evidence an sent back to the national system.
connector.controller.evidence.DeliveryTimeout=86400000
# After this period, if an outgoing message was sent to the gateway successfully and no Retrieval/Non-Retrieval evidence was received,
# a Non-Retrieval will be created for this evidence an sent back to the national system.
connector.controller.evidence.RetrievalTimeout=86400000

<<<<<<< HEAD:domibusConnector/domibusConnectorDocumentation/src/main/resources/config/properties/connector.properties
# Address data entered into generated SubmissionAcceptanceRejection evidences.
=======

# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.evidences.keystore.path=!!CHANGEME!!
# if the keystore is password protected enter the password here:
connector.evidences.keystore.password=!!CHANGEME!!
# if the
connector.evidences.key.alias=!!CHANGEME!!
connector.evidences.key.password=!!CHANGEME!!


# Address data for the generating of the evidences.
>>>>>>> fe553966d29a5ce133e8a87f2a18aead9fa91c9b:domibusConnector/domibusConnectorDocumentation/src/main/resources/config/properties/application.properties
postal.address.street=!!Street
postal.address.locality=!!locality	
postal.address.postal.code=!!zipcode
postal.address.country=!!AT


##################################################################################
############################ SECURITY TOOLKIT ####################################
##################################################################################

# Settings for the security library for generating the Token.
token.issuer.country=!!CHANGEME!!
token.issuer.service.provider=!!CHANGEME!!
# This can rather be SIGNATURE_BASED, then the main document needs to be signed, or AUTHENTICATION_BASED, in that case the security interface needs
# to be implemented (see connector.security.toolkit.implementation.class.name)
token.issuer.aes.value=SIGNATURE_BASED

# The connectors security lib is loading trusted lists over
# the network:

security.lotl.scheme.uri=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl.html
security.lotl.url=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl-mp.xml
security.oj.url=http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2016.233.01.0001.01.ENG


##################################################################################
############################ KEYSTORES/TRUSTSTORES ###############################
##################################################################################


#############################  backend keystore  #############################
#defines the location of the backend keyStore:
connector.backend.ws.key.store.path=!!CHANGEME!!
#defines the key store password:
connector.backend.ws.key.store.password=12345
#defines the key alias for the key which is used to sign the messages:
connector.backend.ws.key.key.alias=connector
#defines the key password:
connector.backend.ws.key.key.password=


#############################  evidences keystore  #############################
# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.evidences.keystore.path=file:C:\\Entwicklung\\domibus\\config\\keystores\\ecodex-keystore.jks
connector.evidences.keystore.password=12345
connector.evidences.key.alias=client
connector.evidences.key.password=12345


#############################  ASIC-S keystore  #############################

# To be able to sign the secure contents of the message, a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.security.keystore.path=!!CHANGEME!!
connector.security.keystore.password=!!CHANGEME!!
connector.security.key.alias=!!CHANGEME!!
connector.security.key.password=!!CHANGEME!!

#############################  connector truststore  #############################

<<<<<<< HEAD:domibusConnector/domibusConnectorDocumentation/src/main/resources/config/properties/connector.properties
# Holds all public keys of partners to validate the received ASIC-S containers against. Also contains public keys of signatures,
# if documents to be sent are signed.
connector.truststore.path=
connector.truststore.password=
=======
# Settings for the security library for generating the Token.
token.issuer.country=!!CHANGEME!!
token.issuer.service.provider=!!CHANGEME!!
# This can rather be SIGNATURE_BASED, then the main document needs to be signed, or AUTHENTICATION_BASED, in that case the security interface needs
# to be implemented (see connector.security.toolkit.implementation.class.name)
token.issuer.aes.value=!!CHANGEME!! 
>>>>>>> fe553966d29a5ce133e8a87f2a18aead9fa91c9b:domibusConnector/domibusConnectorDocumentation/src/main/resources/config/properties/application.properties



##################################################################################
############################ PROXY CONFIGURATION #################################
##################################################################################


# If the connector should use a http proxy for loading the trusted lists  you have to configure
# the proxy values here:
#
#HTTP proxy settings
http.proxy.enabled=true
http.proxy.host=172.30.9.12
http.proxy.port=8080
http.proxy.user=
http.proxy.password=

#HTTPS proxy settings
https.proxy.enabled=true
https.proxy.host=172.30.9.12
https.proxy.port=8080
https.proxy.user=
https.proxy.password=



##################################################################################
############################ DATASOURCE CONFIGURATION ############################
##################################################################################

# You can just define a spring datasource here or use datasource provided by the container
# Hint: Don't forget to add your jdbc driver jar to your web containers classpath!

# Container defined datasource name:

# JNDI location of the datasource. Class, url, username & password are ignored when set!
spring.datasource.jndi-name=domibusWebConnectorDS

###### OR ######
 
# Application defined datasource:

# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.driver-class-name=

# Login username of the database.
#spring.datasource.username=

# JDBC URL of the database.
#spring.datasource.url=

# Login password of the database.
#spring.datasource.password=


########## DATASOURCE EXPERTs CONFIGURATION: ########

## If you want to use your custom connection pooling, you can define it here:
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.type=

#spring.datasource.hikari.*= # Hikari specific settings
## If you want to customize the tomcat datasource
# Tomcat datasource specific settings
#spring.datasource.tomcat.*=





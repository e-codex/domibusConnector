## CONNECTOR PROPERTIES
##
## This file contains the connector configuration properties
## Properties marked with !! must be changed according to your setup/environment!
##

# if the connector detects a missing property it fails to start...
# other possibilities are ignore (ignore only works if property is not needed during startup!)
# connector may fail later!
# not in use yet!
connector.property.missing=fail


#############################################################################
############################ INTERNAL JMS QUEUES CONFIG #####################
#############################################################################
#messages from gwlink to controller module
domibus.connector.internal.gateway.to.controller.queue="gwtocontroller"
#messges from controller module to backend module
domibus.connector.internal.controller.to.backend.queue="controllertobackend"
#messages from backend to controller module
domibus.connector.internal.backend.to.controller.queue="backendtocontroller"



#############################################################################
############################ GATEWAY LINK ###################################
#############################################################################

# defines the endpoint publishAddress of the gateway webservice, the gateway name and role.

# The connector is using this webservice publishAddress to submit messages to the gateway
connector.gatewaylink.ws.submissionEndpointAddress=!!CHANGE ME!! example: http://GW:8080/domibus/services/domibusConnectorSubmissionWebservice

##GWLINK WS config
#gateway.submission.endpoint.publishAddress=http://localhost:9081/domibus/services/domibusConnectorSubmissionWebservice
#gateway.submission.endpoint.publishAddress=http://10.0.3.2:9080/domibus/services/domibusConnectorSubmissionWebservice
#gateway.delivery.service.ssl.key.password=12345
#gateway.delivery.service.ssl.keystore.password=12345
#gateway.delivery.service.ssl.keystore.store=store.jks
#gateway.delivery.service.ssl.truststore.password=12345
#gateway.delivery.service.ssl.truststore.store=store.jks

################################################################################
############################ CONNECTOR-TESTS ###################################
################################################################################

# Service and action entered here according to the p-modes used.
# Enabled and used messages received with that combination will not be sent to the backend of the connector,
# but will be answered with evidences after processed in the connector.
connector.test.service=
connector.test.action=

##################################################################################
############################ EVIDENCES TIMEOUTS ###################################
##################################################################################


# All timeout values apply the following rules:
# -- Set to 0, they will be ignored
# -- After a message is rejected, also a positive received evidence afterwards does not change the status.
# -- All values can be defined as h hours, m minutes, s seconds, ms milliseconds

# boolean value to turn on/off the check if evidences for outgoing messages have been received yet.
connector.controller.evidence.timeoutActive=true
# How often should the timeout of an evidence be checked
# The default is every hour the messages are checked for timed out evidences
connector.controller.evidence.checkTimeout=1h
# After this period, if an outgoing message was sent to the gateway successfully and no RelayREMMD evidence was received,
# a RelayREMMDRejection will be created for this evidence an sent back to the national system.
connector.controller.evidence.relayREMMDTimeout=24h
# After this period, if an outgoing message was sent to the gateway successfully and no Delivery/Non-Delivery evidence was received,
# a Non-Delivery will be created for this evidence an sent back to the national system.
connector.controller.evidence.deliveryTimeout=24h
# After this period, if an outgoing message was sent to the gateway successfully and no Retrieval/Non-Retrieval evidence was received,
# a Non-Retrieval will be created for this evidence an sent back to the national system.
connector.controller.evidence.retrievalTimeout=24h


##################################################################################
############################ EVIDENCES GENERATION CONFIGURATION ##################
##################################################################################

#############################  evidences keystore  #############################
# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.

##EVIDENCES
connector.evidences.private-key.alias=connector
connector.evidences.private-key.password=12345
connector.evidences.key-store.path=classpath:connector.jks
connector.evidences.key-store.password=12345

gateway.endpoint.publishAddress=http://localhost
gateway.name=AT
gateway.role=GW








##################################################################################
############################ SECURITY / ASIC-S CONTAINER HANDLING CONFIGURATION ##
##################################################################################


#############################  TOKEN settings  ###################################

# Settings for the security library for generating the Token.
token.issuer.country=AT
token.issuer.service.provider=BRZ
# This can rather be SIGNATURE_BASED, then the main document needs to be signed, or AUTHENTICATION_BASED, in that case the security interface needs
# to be implemented (see connector.security.toolkit.implementation.class.name)
token.issuer.aes.value=SIGNATURE_BASED

# Address data for the generating of the evidences.
postal.publishAddress.street=street
postal.publishAddress.locality=locality
postal.publishAddress.postal.code=zipcode
postal.publishAddress.country=AT


#############################  ASIC-S keystore  #############################

# To be able to sign the secure contents of the message, a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.security.keystore.path=classpath:keystore.jks
connector.security.keystore.password=12345

connector.security.private-key.alias=mycert
connector.security.private-key.password=12345

connector.security.oj-store.path=classpath:keystore.jks
connector.security.oj-store.password=12345


#############################  connector truststore  #############################

connector.security.trust-store.path=classpath:keystore.jks
connector.security.trust-store.password=12345



security.lotl.scheme.uri=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl.html
security.lotl.url=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl-mp.xml
security.oj.url=http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2016.233.01.0001.01.ENG



##################################################################################
############################ BACKEND CONFIGURATION ###############################
##################################################################################

#############################  backend keystore  #############################
connector.backend.ws.key.store.path=classpath:connector.jks
connector.backend.ws.key.store.password=12345
connector.backend.ws.key.key.alias=connector
connector.backend.ws.key.key.password=
connector.backend.ws.trust.store.path=classpath:connector.jks
connector.backend.ws.trust.store.password=12345



##################################################################################
############################ PROXY CONFIGURATION #################################
##################################################################################


# If the connector should use a http proxy for loading the trusted lists  you have to configure
# the proxy values here:
#

#HTTP and HTTPS proxy settings if necessary
# the ${} will be overwritten by maven process resources according to the
# Environment variables
http.proxy.enabled=${http.proxy.enabled}
http.proxy.host=${http.proxy.host}
http.proxy.port=${http.proxy.port}
http.proxy.user=
http.proxy.password=

#HTTPS proxy settings
# the ${} will be overwritten by maven process resources according to the
# Environment variables
https.proxy.enabled=${https.proxy.enabled}
https.proxy.host=${https.proxy.host}
https.proxy.port=${https.proxy.port}
https.proxy.user=
https.proxy.password=



##################################################################################
############################ DATASOURCE CONFIGURATION ############################
##################################################################################
# DATASOURCE CONFIGURATION IS DONE IN THE SPECIFIC PROFILE PROPERTIES
# application-embedded.properties -> starts a embedded h2 database for datasource
# application-mysql.properties -> uses a mysql database for datasource

spring.liquibase.change-log=classpath:/initsql/initdata.xml
spring.liquibase.enabled=false

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

##################################################################################
############################ ONLY STARTER SPECIFICS CONFIGURATION ################
##################################################################################
#
# The connector only starter specifics like
#
# setting wether the connector is used clustered (with the same database) or not
# not used yet!
connector.clustered=false
#
# the server port for the embedded webcontainer
server.port=8020
# the listen addresse for the embedded webcontainer
#server.publishAddress=0.0.0.0

###Banner
#
banner.location=classpath:/ascii/ecodex.txt


#######
## LOGGING
#######
# spring logging config
#
logging.config=classpath:log4j2.xml
#logging.config= # Location of the logging log4j2 configuration file.
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file= # Log file name. For instance `myapp.log`
#logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.path= # Location of the log file. For instance `/var/log`
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
logging.level.root=INFO
logging.level.eu.domibus=INFO
#logging.level.org.quartz=DEBUG
logging.level.org.hibernate=INFO
##ENABLE SPRING TRACE
#trace=false
##ENABLE SPRING DEBUG
#debug=false

spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none


########
# WEBADMIN
########
# configures if the webadmin servlet is registered
#webadmin.enabled=true
# configures the registration path of the webadmin
# default is admin
#webadmin.servlet.path=/admin




#######
# SETUP not yet implemented
#######
# configures if setup is enabled...

#spring.datasource.jndi-name=domibusWebConnectorDS




#connector.backend.internal.wait-queue.name="backendwaitqeue"


















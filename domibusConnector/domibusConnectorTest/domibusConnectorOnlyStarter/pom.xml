<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>eu.domibus.connector</groupId>
        <artifactId>domibusConnectorTest</artifactId>
        <version>4.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>domibusConnectorOnlyStarter</artifactId>
    <packaging>jar</packaging>
    <name>${project.artifactId}</name>
    <description>This module packages the connector with an embedded tomcat and database (h2).
        This makes this module perfect for local testing. It also contains a reasonably default configuration with certifcates.
    </description>

    <properties>
        <mainClass>eu.domibus.connector.starter.ConnectorStarter</mainClass>
    </properties>

    <dependencies>

        <dependency>
            <groupId>eu.domibus.connector</groupId>
            <artifactId>domibusConnectorWeb</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>h2</id>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>mysql</id>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>



    <build>


        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>                
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>eu.domibus.connector.starter.ConnectorStarter</mainClass>
                </configuration>
			<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>org.springframework</groupId>-->
                        <!--<artifactId>springloaded</artifactId>-->
                        <!--<version>1.2.6.RELEASE</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
            </plugin>
	    <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>0.24.0</version>
              <configuration>
                <images>
                  <image>
                    <name>ecodex/domibusconnector:${project.version}</name>
                    <build>
                      <from>java:8</from>
                      <dockerFile>Dockerfile</dockerFile>
                      <assembly>
                        <descriptor>docker-assembly.xml</descriptor>
                      </assembly>
                      <!--<cmd>-->
                        <!--&lt;!&ndash;<shell>/maven/connector/init-db.sh; java -jar /maven/connector/connector.jar</shell> &ndash;&gt;-->
                        <!--<shell>/maven/connector/wait-for-it.sh ${DB_HOST}:${DB_PORT} -t 20 &#45;&#45; java -jar /maven/connector/connector.jar</shell>-->
                      <!--</cmd>-->
                    </build>
                  </image>
                </images>
              </configuration>
            </plugin>
        </plugins>
    </build>
    
</project>

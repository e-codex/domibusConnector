## CONNECTOR PROPERTIES
##
## This file contains the connector configuration properties
## Properties marked with !! must be changed according to your setup/environment!
##



#############################################################################
############################ GATEWAY LINK ###################################
#############################################################################

# defines the endpoint address of the gateway webservice, the gateway name and role.

# The connector is using this webservice address to submit messages to the gateway
connector.gatewaylink.ws.submissionEndpointAddress=http://127.0.0.1:8080/domibus/services/domibusConnectorSubmissionWebservice


################################################################################
############################ CONNECTOR-TESTS ###################################
################################################################################

# Service and action entered here according to the p-modes used.
# Enabled and used messages received with that combination will not be sent to the backend of the connector, 
# but will be answered with evidences after processed in the connector.
connector.test.service=testService1
connector.test.action=tc2Action

##################################################################################
############################ EVIDENCES TOOLKIT ###################################
##################################################################################

# All timeout values apply the following rules:
# -- Set to 0, they will be ignored
# -- After a message is rejected, also a positive received evidence afterwards does not change the status.
# -- All values can be defined as h hours, m minutes, s seconds, ms milliseconds

# boolean value to turn on/off the check if evidences for outgoing messages have been received yet.
connector.controller.evidence.timeoutActive=true
# How often should the timeout of an evidence be checked
# The default is every hour the messages are checked for timed out evidences
connector.controller.evidence.checkTimeout=1h
# After this period, if an outgoing message was sent to the gateway successfully and no RelayREMMD evidence was received,
# a RelayREMMDRejection will be created for this evidence an sent back to the national system.
connector.controller.evidence.relayREMMDTimeout=24h
# After this period, if an outgoing message was sent to the gateway successfully and no Delivery/Non-Delivery evidence was received,
# a Non-Delivery will be created for this evidence an sent back to the national system.
connector.controller.evidence.deliveryTimeout=24h
# After this period, if an outgoing message was sent to the gateway successfully and no Retrieval/Non-Retrieval evidence was received,
# a Non-Retrieval will be created for this evidence an sent back to the national system.
connector.controller.evidence.retrievalTimeout=24h

# This property should show the EXTERNAL address where the gateway can be reached. Should match the address published with the pmodes.
gateway.endpoint.address=http://127.0.0.1:8080/domibus/services/msh

#This is the name of your Gateway. This should match the PartyID within the pmodes.
gateway.name=Test-GW

# Address data for the generating of the evidences.
postal.address.street=Teststreet 1
postal.address.locality=Testcity	
postal.address.postal.code=12345
postal.address.country=AT


##################################################################################
############################ SECURITY TOOLKIT ####################################
##################################################################################

# Settings for the security library for generating the Token.
token.issuer.country=AT
token.issuer.service.provider=TestProvider
# This can rather be SIGNATURE_BASED, then the main document needs to be signed, or AUTHENTICATION_BASED, in that case the security interface needs
# to be implemented (see connector.security.toolkit.implementation.class.name)
token.issuer.aes.value=AUTHENTICATION_BASED

# The connectors security lib is loading trusted lists over
# the network:

security.lotl.scheme.uri=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl.html
security.lotl.url=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl-mp.xml
security.oj.url=http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2016.233.01.0001.01.ENG


##################################################################################
############################ KEYSTORES/TRUSTSTORES ###############################
##################################################################################


#############################  backend keystore  #############################
#defines the location of the backend keyStore:
connector.backend.ws.key.store.path=classpath:store/connector-backend-keystore.jks
#defines the key store password:
connector.backend.ws.key.store.password=12345
#defines the key alias for the key which is used to sign the messages:
connector.backend.ws.key.key.alias=connector-backend
#defines the key password:
connector.backend.ws.key.key.password=12345

connector.backend.ws.trust.store.path=classpath:store/connector-backend-keystore.jks
connector.backend.ws.trust.store.password=12345


#############################  evidences keystore  #############################
# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
#connector.evidences.key-store.path=file:C:/Entwicklung/EXEC-Installation-Workshop/EXECUser1/configuration/keystores/connector-execuser1.jks
connector.evidences.key-store.path=classpath:store/connector-execuser1.jks
# if the keystore is password protected enter the password here:
connector.evidences.key-store.password=12345
# if the
connector.evidences.private-key.alias=execcon1
connector.evidences.private-key.password=12345


#############################  ASIC-S keystore  #############################

# To be able to sign the secure contents of the message, a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.security.key-store.path=classpath:store/connector-execuser1.jks
connector.security.key-store.password=12345
connector.security.private-key.alias=execcon1
connector.security.private-key.password=12345

#############################  connector truststore  #############################

# Holds all public keys of partners to validate the received ASIC-S containers against. Also contains public keys of signatures,
# if documents to be sent are signed.
connector.security.trust-store.path=classpath:store/connector-truststore.jks
connector.security.trust-store.password=12345




##################################################################################
############################ PROXY CONFIGURATION #################################
##################################################################################


# If the connector should use a http proxy for loading the trusted lists  you have to configure
# the proxy values here:
#
#HTTP proxy settings
http.proxy.enabled=true
http.proxy.host=172.30.9.12
http.proxy.port=8080
http.proxy.user=
http.proxy.password=

#HTTPS proxy settings
https.proxy.enabled=true
https.proxy.host=172.30.9.12
https.proxy.port=8080
https.proxy.user=
https.proxy.password=



##################################################################################
############################ DATASOURCE CONFIGURATION ############################
##################################################################################

# You can just define a spring datasource here or use datasource provided by the container
# Hint: Don't forget to add your jdbc driver jar to your web containers classpath!

# Container defined datasource name:

# JNDI location of the datasource. Class, url, username & password are ignored when set!
#spring.datasource.jndi-name=domibusWebConnectorDS

###### OR ######
 
# Application defined datasource:

# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Login username of the database.
spring.datasource.username=tbckenddb

# JDBC URL of the database.
spring.datasource.url=jdbc:oracle:thin:@sjusee:1521:sjusee

# Login password of the database.
spring.datasource.password=tbckenddb

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

########## DATASOURCE EXPERTs CONFIGURATION: ########
# For further information consult: https://docs.spring.io/spring-boot/docs/1.5.8.RELEASE/reference/html/common-application-properties.html

## If you want to use your custom connection pooling, you can define it here:
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.type=

#spring.datasource.hikari.*= # Hikari specific settings
## If you want to customize the tomcat datasource
# Tomcat datasource specific settings
#spring.datasource.tomcat.*=



server.port=8021





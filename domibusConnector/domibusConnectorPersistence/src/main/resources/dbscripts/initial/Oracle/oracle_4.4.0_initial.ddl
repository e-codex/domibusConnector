

-- INITIAL DATABASE SCRIPT FOR domibusConnector 4.4.x
--

CREATE TABLE DOMIBUS_CONNECTOR_SEQ_STORE
(
    SEQ_NAME  VARCHAR2(255 CHAR) NOT NULL,
    SEQ_VALUE DECIMAL(10, 0) NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_SEQ_STORE
    ADD CONSTRAINT PK_DC_SEQ_STORE PRIMARY KEY (SEQ_NAME);



CREATE TABLE DC_PMODE_SET
(
    ID              DECIMAL(10, 0) NOT NULL,
    FK_MESSAGE_LANE DECIMAL(10, 0),
    CREATED         TIMESTAMP      NOT NULL,
    DESCRIPTION     CLOB,
    ACTIVE          DECIMAL(1, 0)  NOT NULL,
    CONSTRAINT PK_DC_PMODE_SET PRIMARY KEY (ID)
);

CREATE TABLE DOMIBUS_CONNECTOR_ACTION
(
    ID           DECIMAL(10, 0) NOT NULL,
    FK_PMODE_SET DECIMAL(10, 0) NOT NULL,
    ACTION       VARCHAR2(255) NOT NULL,
    PDF_REQUIRED DECIMAL(1, 0)  NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_ACTION
    ADD CONSTRAINT PK_DC_ACTION PRIMARY KEY (ID);
ALTER TABLE DOMIBUS_CONNECTOR_ACTION
    ADD CONSTRAINT FK_DC_ACTION_PMODE_SET_01 FOREIGN KEY (FK_PMODE_SET) REFERENCES DC_PMODE_SET (ID);


CREATE TABLE DOMIBUS_CONNECTOR_SERVICE
(
    ID           DECIMAL(10, 0) NOT NULL,
    FK_PMODE_SET DECIMAL(10, 0) NOT NULL,
    SERVICE      VARCHAR2(255) NOT NULL,
    SERVICE_TYPE VARCHAR2(512) NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_SERVICE
    ADD CONSTRAINT PK_DC_SERVICE PRIMARY KEY (ID);
ALTER TABLE DOMIBUS_CONNECTOR_SERVICE
    ADD CONSTRAINT FK_DC_SERVICE_PMODE_SET_01 FOREIGN KEY (FK_PMODE_SET) REFERENCES DC_PMODE_SET (ID);

CREATE TABLE DOMIBUS_CONNECTOR_PARTY
(
    ID            DECIMAL(10, 0) NOT NULL,
    FK_PMODE_SET  DECIMAL(10, 0) NOT NULL,
    IDENTIFIER    VARCHAR2(255),
    PARTY_ID      VARCHAR2(255) NOT NULL,
    ROLE          VARCHAR2(255) NOT NULL,
    PARTY_ID_TYPE VARCHAR2(512) NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_PARTY
    ADD CONSTRAINT PK_DC_PARTY PRIMARY KEY (ID);
ALTER TABLE DOMIBUS_CONNECTOR_PARTY
    ADD CONSTRAINT FK_DC_PARTY_PMODE_SET_01 FOREIGN KEY (FK_PMODE_SET) REFERENCES DC_PMODE_SET (ID);

CREATE TABLE DOMIBUS_CONNECTOR_MSG_ERROR
(
    ID            DECIMAL(10, 0) NOT NULL,
    MESSAGE_ID    DECIMAL(10, 0) NOT NULL,
    ERROR_MESSAGE VARCHAR2(2048 CHAR) NOT NULL,
    DETAILED_TEXT CLOB,
    ERROR_SOURCE  CLOB,
    CREATED       TIMESTAMP      NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_MSG_ERROR
    ADD CONSTRAINT PK_DC_MSG_ERROR PRIMARY KEY (ID);

CREATE TABLE DOMIBUS_CONNECTOR_MSG_CONT
(
    ID                    DECIMAL(10, 0) NOT NULL,
    MESSAGE_ID            DECIMAL(10, 0) NOT NULL,
    CONTENT_TYPE          VARCHAR2(255 CHAR),
    CONTENT               BLOB,
    CHECKSUM              CLOB,
    CREATED               TIMESTAMP      NOT NULL,
    STORAGE_PROVIDER_NAME VARCHAR2(255),
    STORAGE_REFERENCE_ID  VARCHAR2(512),
    DIGEST                VARCHAR2(512),
    PAYLOAD_NAME          VARCHAR2(512),
    PAYLOAD_IDENTIFIER    VARCHAR2(512),
    PAYLOAD_DESCRIPTION   CLOB,
    PAYLOAD_MIMETYPE      VARCHAR2(255),
    PAYLOAD_SIZE          DECIMAL(10, 0),
    DETACHED_SIGNATURE_ID DECIMAL(10, 0),
    DELETED               TIMESTAMP,
    CONNECTOR_MESSAGE_ID  VARCHAR2(512 CHAR)
);

ALTER TABLE DOMIBUS_CONNECTOR_MSG_CONT
    ADD CONSTRAINT PK_DC_MSG_CONT PRIMARY KEY (ID);

CREATE TABLE DOMIBUS_CONNECTOR_BIGDATA
(
    ID          VARCHAR2(255 CHAR) NOT NULL,
    CHECKSUM    CLOB,
    CREATED     TIMESTAMP NOT NULL,
    MESSAGE_ID  DECIMAL(10, 0),
    LAST_ACCESS TIMESTAMP,
    NAME        CLOB,
    CONTENT     BLOB,
    MIMETYPE    VARCHAR2(255 CHAR)
);
ALTER TABLE DOMIBUS_CONNECTOR_BIGDATA
    ADD PRIMARY KEY (ID);
ALTER TABLE DOMIBUS_CONNECTOR_BIGDATA
    ADD CONSTRAINT FK_DC_BIGDATA_MESSAGE_01 FOREIGN KEY (MESSAGE_ID) REFERENCES DOMIBUS_CONNECTOR_MESSAGE (ID);

CREATE TABLE DOMIBUS_CONNECTOR_MESSAGE_INFO
(
    ID               DECIMAL(10, 0) NOT NULL,
    MESSAGE_ID       DECIMAL(10, 0) NOT NULL,
    FK_FROM_PARTY_ID DECIMAL(10, 0),
    FK_TO_PARTY_ID   DECIMAL(10, 0),
    ORIGINAL_SENDER  VARCHAR2(2048 CHAR),
    FINAL_RECIPIENT  VARCHAR2(2048 CHAR),
    FK_SERVICE       DECIMAL(10, 0),
    FK_ACTION        DECIMAL(10, 0),
    CREATED          TIMESTAMP NOT NULL,
    UPDATED          TIMESTAMP NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE_INFO
    ADD CONSTRAINT PK_DC_MESSAGE_INFO PRIMARY KEY (ID);

CREATE TABLE DOMIBUS_CONNECTOR_MESSAGE
(
    ID                   DECIMAL(10, 0) NOT NULL,
    EBMS_MESSAGE_ID      VARCHAR2(255 CHAR),
    BACKEND_MESSAGE_ID   VARCHAR2(255 CHAR),
    BACKEND_NAME         VARCHAR2(255 CHAR),
    CONNECTOR_MESSAGE_ID VARCHAR2(255 CHAR),
    CONVERSATION_ID      VARCHAR2(255 CHAR),
    HASH_VALUE           CLOB,
    CONFIRMED            TIMESTAMP,
    REJECTED             TIMESTAMP,
    DELIVERED_BACKEND    TIMESTAMP,
    DELIVERED_GW         TIMESTAMP,
    UPDATED              TIMESTAMP NOT NULL,
    CREATED              TIMESTAMP NOT NULL,
    DIRECTION_SOURCE     VARCHAR2(20),
    DIRECTION_TARGET     VARCHAR2(20),
    GATEWAY_NAME         VARCHAR2(255)
);

ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE
    ADD CONSTRAINT PK_DC_MESSAGE PRIMARY KEY (ID);
ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE
    ADD CONSTRAINT UQ_DC_MSG_CON_MSG_ID UNIQUE (CONNECTOR_MESSAGE_ID);
ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE
    ADD CONSTRAINT UQ_DC_MSG_BCK_MSG_ID UNIQUE (BACKEND_MESSAGE_ID);

CREATE TABLE DOMIBUS_CONNECTOR_EVIDENCE
(
    ID                   DECIMAL(10, 0) NOT NULL,
    MESSAGE_ID           DECIMAL(10, 0) NOT NULL,
    CONNECTOR_MESSAGE_ID VARCHAR2(255),
    TYPE                 VARCHAR2(255 CHAR),
    EVIDENCE             CLOB,
    DELIVERED_NAT        TIMESTAMP,
    DELIVERED_GW         TIMESTAMP,
    UPDATED              TIMESTAMP NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_EVIDENCE
    ADD CONSTRAINT PK_DC_EVIDENCE PRIMARY KEY (ID);

CREATE TABLE DOMIBUS_CONNECTOR_CONT_TYPE
(
    MESSAGE_CONTENT_TYPE VARCHAR2(255 CHAR) NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_CONT_TYPE
    ADD CONSTRAINT PK_DC_CONT_TYPE PRIMARY KEY (MESSAGE_CONTENT_TYPE);

CREATE TABLE DOMIBUS_CONNECTOR_BACKEND_INFO
(
    ID                   DECIMAL(10, 0) NOT NULL,
    BACKEND_NAME         VARCHAR2(255 CHAR) NOT NULL,
    BACKEND_KEY_ALIAS    VARCHAR2(255 CHAR) NOT NULL,
    BACKEND_KEY_PASS     VARCHAR2(255 CHAR),
    BACKEND_SERVICE_TYPE VARCHAR2(255 CHAR),
    BACKEND_ENABLED      NUMBER(1) DEFAULT 1,
    BACKEND_DEFAULT      NUMBER(1) DEFAULT 0,
    BACKEND_DESCRIPTION  CLOB,
    BACKEND_PUSH_ADDRESS CLOB
);
ALTER TABLE DOMIBUS_CONNECTOR_BACKEND_INFO
    ADD CONSTRAINT PK_DC_BACK_INFO PRIMARY KEY (ID);

ALTER TABLE DOMIBUS_CONNECTOR_BACKEND_INFO
    ADD CONSTRAINT UN_DC_BACK_INFO_01 UNIQUE (BACKEND_NAME);
ALTER TABLE DOMIBUS_CONNECTOR_BACKEND_INFO
    ADD CONSTRAINT UN_DC_BACK_INFO_02 UNIQUE (BACKEND_KEY_ALIAS);

CREATE TABLE DOMIBUS_CONNECTOR_BACK_2_S
(
    DOMIBUS_CONNECTOR_SERVICE_ID VARCHAR2(255 CHAR) NOT NULL,
    DOMIBUS_CONNECTOR_BACKEND_ID DECIMAL(10, 0) NOT NULL
);
ALTER TABLE DOMIBUS_CONNECTOR_BACK_2_S
    ADD CONSTRAINT PK_DC_BACK2S PRIMARY KEY (DOMIBUS_CONNECTOR_SERVICE_ID, DOMIBUS_CONNECTOR_BACKEND_ID);

ALTER TABLE DOMIBUS_CONNECTOR_MSG_ERROR
    ADD CONSTRAINT FK_DC_MSG_ERROR_01 FOREIGN KEY (MESSAGE_ID) REFERENCES DOMIBUS_CONNECTOR_MESSAGE (ID);
ALTER TABLE DOMIBUS_CONNECTOR_MSG_CONT
    ADD CONSTRAINT FK_DC_CON_01 FOREIGN KEY (MESSAGE_ID) REFERENCES DOMIBUS_CONNECTOR_MESSAGE (ID);

ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE_INFO
    ADD CONSTRAINT FK_DC_MSG_INFO_F_PARTY FOREIGN KEY (FK_FROM_PARTY_ID) REFERENCES DOMIBUS_CONNECTOR_PARTY (ID);
ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE_INFO
    ADD CONSTRAINT FK_DC_MSG_INFO_T_PARTY FOREIGN KEY (FK_TO_PARTY_ID) REFERENCES DOMIBUS_CONNECTOR_PARTY (ID);
ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE_INFO
    ADD CONSTRAINT FK_DC_MSG_INFO_SERVICE FOREIGN KEY (FK_SERVICE) REFERENCES DOMIBUS_CONNECTOR_SERVICE (ID);
ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE_INFO
    ADD CONSTRAINT FK_DC_MSG_INFO_ACTION FOREIGN KEY (FK_ACTION) REFERENCES DOMIBUS_CONNECTOR_ACTION (ID);
ALTER TABLE DOMIBUS_CONNECTOR_MESSAGE_INFO
    ADD CONSTRAINT FK_DC_MSG_INFO_I FOREIGN KEY (MESSAGE_ID) REFERENCES DOMIBUS_CONNECTOR_MESSAGE (ID);

ALTER TABLE DOMIBUS_CONNECTOR_EVIDENCE
    ADD CONSTRAINT FK_DC_EVIDENCES_01 FOREIGN KEY (MESSAGE_ID) REFERENCES DOMIBUS_CONNECTOR_MESSAGE (ID);

ALTER TABLE DOMIBUS_CONNECTOR_BACK_2_S
    ADD CONSTRAINT FK_DC_BACK2S_01 FOREIGN KEY (DOMIBUS_CONNECTOR_BACKEND_ID) REFERENCES DOMIBUS_CONNECTOR_BACKEND_INFO (ID);

ALTER TABLE DOMIBUS_CONNECTOR_BIGDATA
    ADD CONSTRAINT FK_DC_BIGDATA_01 FOREIGN KEY (MESSAGE_ID) REFERENCES DOMIBUS_CONNECTOR_MESSAGE (ID);

CREATE TABLE DOMIBUS_CONNECTOR_PROPERTY
(
    ID             DECIMAL(10, 0) NOT NULL PRIMARY KEY,
    PROPERTY_NAME  VARCHAR2(2048) NOT NULL,
    PROPERTY_VALUE VARCHAR2(2048) NULL
);

-- USER:

CREATE TABLE DOMIBUS_CONNECTOR_USER
(
    ID                     DECIMAL(10, 0) NOT NULL,
    USERNAME               VARCHAR2(50) NOT NULL,
    ROLE                   VARCHAR2(50) NOT NULL,
    LOCKED                 NUMBER(1) DEFAULT 0 NOT NULL,
    NUMBER_OF_GRACE_LOGINS NUMBER(2) DEFAULT 5 NOT NULL,
    GRACE_LOGINS_USED      NUMBER(2) DEFAULT 0 NOT NULL,
    CREATED                TIMESTAMP      NOT NULL
);

CREATE TABLE DOMIBUS_CONNECTOR_USER_PWD
(
    ID          DECIMAL(10, 0) NOT NULL,
    USER_ID     DECIMAL(10, 0) NOT NULL,
    PASSWORD    VARCHAR2(1024) NOT NULL,
    SALT        VARCHAR2(512) NOT NULL,
    CURRENT_PWD NUMBER(1) DEFAULT 0 NOT NULL,
    INITIAL_PWD NUMBER(1) DEFAULT 0 NOT NULL,
    CREATED     TIMESTAMP      NOT NULL
);

/* Create Primary Keys, Indexes, Uniques, Checks, Triggers */

ALTER TABLE DOMIBUS_CONNECTOR_USER
    ADD CONSTRAINT PK_DC_USER
        PRIMARY KEY (ID)
;

ALTER TABLE DOMIBUS_CONNECTOR_USER_PWD
    ADD CONSTRAINT PK_DC_USER_PWD
        PRIMARY KEY (ID);
		
		
ALTER TABLE DOMIBUS_CONNECTOR_USER_PWD
    ADD CONSTRAINT FK_DC_USER_PWD_01 FOREIGN KEY (USER_ID) REFERENCES DOMIBUS_CONNECTOR_USER (ID);

		

create table DC_LINK_CONFIGURATION
(
    ID          DECIMAL(10, 0) not null,
    CONFIG_NAME VARCHAR2(255) not null
        constraint UN_DC_LINK_CONF_NAME_01
        unique,
    LINK_IMPL   VARCHAR2(255),
    constraint PK_DC_LINK_CONFIGURATION
        primary key (ID)
);

create table DC_LINK_CONFIG_PROPERTY
(
    DC_LINK_CONFIGURATION_ID DECIMAL(10, 0) not null,
    PROPERTY_NAME            VARCHAR2(255) not null,
    PROPERTY_VALUE           CLOB,
    constraint PK_DC_LINK_CONF_PROP
        primary key (DC_LINK_CONFIGURATION_ID, PROPERTY_NAME),
    constraint FK_DC_LINK_CONF_PROP_01
        foreign key (DC_LINK_CONFIGURATION_ID) references DC_LINK_CONFIGURATION (ID)
);

create table DC_MESSAGE_LANE
(
    ID          DECIMAL(10, 0) not null,
    NAME        VARCHAR2(255) not null
        constraint UN_DC_MSG_LANE_01
        unique,
    DESCRIPTION CLOB,
    constraint PK_DC_MSG_LANE
        primary key (ID)
);

create table DC_MESSAGE_LANE_PROPERTY
(
    DC_MESSAGE_LANE_ID DECIMAL(10, 0) not null,
    PROPERTY_NAME      VARCHAR2(255) not null,
    PROPERTY_VALUE     CLOB,
    constraint PK_DC_MSG_LANE_PROP
        primary key (DC_MESSAGE_LANE_ID, PROPERTY_NAME),
    constraint FK_DC_MSG_LANE_PROP_01
        foreign key (DC_MESSAGE_LANE_ID) references DC_MESSAGE_LANE (ID)
);



create table DC_LINK_PARTNER
(
    ID             DECIMAL(10, 0) not null,
    NAME           VARCHAR2(255) not null
        constraint UN_DC_LINK_P_01
        unique,
    DESCRIPTION    CLOB,
    ENABLED        DECIMAL(1, 0),
    LINK_CONFIG_ID DECIMAL(10, 0),
    LINK_TYPE      VARCHAR2(20),
    LINK_MODE      VARCHAR2(20),
    constraint PK_DC_LINK_P
        primary key (ID),
    constraint FK_DC_LINK_P_01
        foreign key (LINK_CONFIG_ID) references DC_LINK_CONFIGURATION (ID)
);

create table DC_LINK_PARTNER_PROPERTY
(
    DC_LINK_PARTNER_ID DECIMAL(10, 0) not null,
    PROPERTY_NAME      VARCHAR2(255) not null,
    PROPERTY_VALUE     CLOB,
    constraint PK_DC_LINK_P_PROP
        primary key (DC_LINK_PARTNER_ID, PROPERTY_NAME),
    constraint FK_DC_LINK_P_PROP_01
        foreign key (DC_LINK_PARTNER_ID) references DC_LINK_PARTNER (ID)
);

create table DC_TRANSPORT_STEP
(
    ID                          DECIMAL(10, 0) not null,
    CONNECTOR_MESSAGE_ID        VARCHAR2(255) not null,
    LINK_PARTNER_NAME           VARCHAR2(255) not null,
    ATTEMPT                     INT            not null,
    TRANSPORT_ID                VARCHAR2(255),
    TRANSPORT_SYSTEM_MESSAGE_ID VARCHAR2(255),
    REMOTE_MESSAGE_ID           VARCHAR2(255),
    CREATED                     TIMESTAMP,
    TRANSPORTED_MESSAGE         CLOB,
    FINAL_STATE_REACHED         TIMESTAMP,
    constraint PK_DC_TRANSPORT_STEP
        primary key (ID)
);

create table DC_TRANSPORT_STEP_STATUS
(
    TRANSPORT_STEP_ID DECIMAL(10, 0) not null,
    STATE             VARCHAR2(40) not null,
    CREATED           TIMESTAMP,
    TEXT              CLOB,
    constraint PK_DC_TRANS_STEP_STATUS
        primary key (TRANSPORT_STEP_ID, STATE),
    constraint FK_DC_TRANS_STEP_STATUS_01
        foreign key (TRANSPORT_STEP_ID) references DC_TRANSPORT_STEP (ID)
);

create table DC_MSGCNT_DETSIG
(
    ID             DECIMAL(10, 0) not null,
    SIGNATURE      CLOB,
    SIGNATURE_NAME VARCHAR2(255),
    SIGNATURE_TYPE VARCHAR2(255),
    constraint PK_DETSIG
        primary key (ID)
);

CREATE TABLE DC_DB_VERSION
(
    TAG VARCHAR2(255) PRIMARY KEY
);

# defines the endpoint address of the gateway webservice, the gateway name and role.
gateway.endpoint.address=
gateway.name=
gateway.role=



######
# CONNECTOR EVIDENCES TOOLKIT PROPERTIES
######

# defines the timeout for RelayREMMD evidence to be sent back when an outgoing message was sent.
# After this period, if an outgoing message was sent to the gateway successfully and no RelayREMMD evidence was received,
# a RelayREMMDRejection will be created for this evidence an sent back to the national system.
# Value is in milliseconds. For seconds divide value with 1000. For hours divide value with 3600000.
connector.evidence.relayremmd.timeout.ms=86400000
connector.evidence.delivery.timeout.ms=86400000
connector.evidence.retrieval.timeout.ms=86400000

# boolean value to turn on/off the check if evidences for outgoing messages have been received yet.
connector.use.evidences.timeout=false


# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.evidences.keystore.path=file:/private.jks
connector.evidences.keystore.password=
connector.evidences.key.alias=
connector.evidences.key.password=



#############################  backend store  #############################
#defines the location of the backend keyStore:
connector.backend.ws.key.store.path=keys/backend.jks
#defines the key store password:
connector.backend.ws.key.store.password=12345
#defines the key alias for the key which is used to sign the messages:
connector.backend.ws.key.key.alias=connector
#defines the key password:
connector.backend.ws.key.key.password=

#
connector.test.service=
connector.test.action=



#####
##### SECURITY TOOLKIT/LIBRARY RELATED CONFIGURATION

# To be able to sign the secure contents of the message, a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.security.keystore.path=file:/private.jks
connector.security.keystore.password=
connector.security.key.alias=
connector.security.key.password=

#connector.security.toolkit.implementation.class.name=

# Settings for the security library for generating the Token.
token.issuer.country=
token.issuer.service.provider=
# This can rather be SIGNATURE_BASED, then the main document needs to be signed, or AUTHENTICATION_BASED, in that case the security interface needs
# to be implemented (see connector.security.toolkit.implementation.class.name)
token.issuer.aes.value=SIGNATURE_BASED


# Address data for the generating of the evidences.
postal.address.street=
postal.address.locality=
postal.address.postal.code=
postal.address.country=


# A keystore with trusted, public certificates the security library checks received ASiC-S containers and "Trust Ok"-Tokens against.
# If this property is set, signatures with certificates not being listed within the truststore will create an exception at the time of container/token-validation
# Do not set this properties to disable the check against a trusted certificate store.
#file:/unittest_truststore.jks

#defines the trust store location:
connector.security.ojstore.path=
#defines the store password
connector.security.ojstore.password=


# The connectors security lib is loading trusted lists over
# the network:

security.lotl.scheme.uri=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl.html
security.lotl.url=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl-mp.xml
security.oj.url=http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2016.233.01.0001.01.ENG

# If the connector should use a http proxy for loading the trusted lists ^--- you have to configure
# the proxy values here:
#
#HTTP proxy settings
http.proxy.enabled=false
http.proxy.host=
http.proxy.port=
http.proxy.user=
http.proxy.password=

#HTTPS proxy settings
https.proxy.enabled=false
https.proxy.host=
https.proxy.port=
https.proxy.user=
https.proxy.password=



# setting wether the connector is used clustered (with the same database) or not
connector.clustered=false


##LIQUIBASE
#
liquibase.enabled=false
liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml


#######
## LOGGING
#######
#logging.config= # Location of the logging log4j2 configuration file.
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file= # Log file name. For instance `myapp.log`
#logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.path= # Location of the log file. For instance `/var/log`
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
logging.level.root=WARN
logging.level.eu.domibus=INFO
#logging.level.org.quartz=DEBUG

##ENABLE SPRING TRACE
#trace=false
##ENABLE SPRING DEBUG
#debug=false



#########
## DATASOURCE
# you can just define a spring datasource here or use datasource provided by the container
#
#########
spring.datasource.jndi-name=domibusWebConnectorDS


 <document>
  <properties>
    <title>Glossary</title>
    <author email="hamidbm@ymail.com">Hamid Ben Malek</author>
    <author email="jdurand@us.fujitsu.com">Jacques Durand</author>
  </properties>
  <body>

  <section name="Terminology">

  <p>
   This document describes some of the most common terms encountered while using Holodeck. 
   Some of these terms may have an explicit meaning for Holodeck, can sometimes be confusing 
   for newcomers.
  </p>

   <ul>
     <li> <b>MSH</b>:
    An <i>MSH</i> is a set of modules working together in one single box to ensure B2B message exchage
    according to certain rules. A typical <i>MSH</i> would contain at least three modules: <i>ebMS3 Module</i>,
    <i>Reliability Module</i> and a <i>Security Module</i>. The <i>Reliability Module</i> is an implementation of either the
    Oasis WS-Reliability 1.1 specification or the Oasis Reliable Messaging specification. The <i>Security Module</i>
    is an implemenation of the Oasis WS-Security 1.0/1.1 specification. In short, an <i>MSH</i> is a product that
    implements the ebXML Messaging Version 3 specification along with some of its profiles.
     </li>

     <li> <b>PartyId</b>:
    In the ebXML Messaging Version 3 specification, a <i>PartyId</i> is just a consumer application that sits behind
    an <i>MSH</i>. In other words, a <i>PartyId</i> is the final consumer (after an <i>MSH</i> is done processing a received
    message, it would give the message to some <i>PartyId</i> to consume it). The ebXML Messaging specification Version 3
    also uses the term <i>User</i> as synomyous to <i>PartyId</i>. That is why a message that contains payload data is called
    <i>User Message</i> because it will be processed by a PartyId when the <i>MSH</i> is done with it.

    However, in the terminology used by Holodeck, a <i>PartyId</i> remains as just an abstract parameter. Holodeck refers to
    a "consumer" by just the name "Consumer" (and not by the term <i>PartyId</i>). Since Holodeck considers <i>PartyId</i>
    as just a parameter, many consumers sitting behind an <i>MSH</i> may actually have the same value for <i>PartyId</i>.
    In other words, whereas in the ebXML Messaging Version 3 specification, there is a one-to-one correspondence
    between a <i>PartyId</i> and a <i>Consumer</i>, in Holodeck terminology there is a one-to-many relationship betweeen a
    <i>PartyId</i> and <i>Consumer</i>.
    </li>
 
    <li> <b>User Message</b>:
    A <i>User Message</i> is simply a message that contains payload data, and therefore, it is intended to be consumed
    by some entity that is beyond the <i>MSH</i> (i.e. sitting behind the <i>MSH</i>). A <i>User Message</i> always contains in
    its SOAP Header the element &lt;eb:UserMessage\>.
    </li> 

    <li> <b>Submit Operation</b>:
    <i>Submit</i> corresponds to the operation of giving payload data to an <i>MSH</i>. The payload data could be given as
    it is or it could be put in an SOAP Message (Mime Message) prior to giving it to an <i>MSH</i>. What an <i>MSH</i> would
    do with such payload data? It depends on the context (called <i>PMode</i>). When entity submits a message to an
    <i>MSH</i>, it also provides the <i>MSH</i> with metadata that say which <i>PMode</i> the submitted message is associated to.
    So, depending on the <i>PMode</i> the submitted message is associated to, the <i>MSH</i> may send out such payload data
    in the form a SOAP Message (or Mime Message), or it may store such payload data in its database so that it can be
    pulled by another <i>MSH</i> at a later time. When a submitted message is sent out (<i>pushed</i> by the <i>MSH</i>), such a
    message could represent either a request or a response message to some previous request.
    </li> 

    <li> <b>Deliver Operation</b>:
    The <i>Deliver Operation</i> is the opposite of the the <i>Submit Operation</i>. In the <i>Submit</i> operation, payload
    data flows from an external entity to an <i>MSH</i>, whereas in the <i>Deliver</i> operation, payload data flows from
    an <i>MSH</i> to an external entity (usually a consumer in this case).
    </li> 

   </ul>

</section>
</body>
</document>
